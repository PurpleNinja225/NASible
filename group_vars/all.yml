---
# ooooo      ooo       .o.        .oooooo..o  o8o   .o8       oooo
# `888b.     `8'      .888.      d8P'    `Y8  `"'  "888       `888
#  8 `88b.    8      .8"888.     Y88bo.      oooo   888oooo.   888   .ooooo.
#  8   `88b.  8     .8' `888.     `"Y8888o.  `888   d88' `88b  888  d88' `88b
#  8     `88b.8    .88ooo8888.        `"Y88b  888   888   888  888  888ooo888
#  8       `888   .8'     `888.  oo     .d8P  888   888   888  888  888    .o
# o8o        `8  o88o     o8888o 8""88888P'  o888o  `Y8bod8P' o888o `Y8bod8P'
#    N A S i b l e      https://github.com/PurpleNinja225/nasible
#############################################################################
### DO NOT EDIT THIS FILE!
### Add your customisations to inventories/{{ inventory }}/group_vars/nas.yml
### This file is just to show all available configuration options.
#############################################################################

#############################################################################
### General NASible Settings ################################################
#############################################################################

# User to be created to manage your NASible installation
nasible_user: nasible

# Sets a generic password for NASible containers when available
nasible_default_password: nasiblesecret

# Applications will have subdomain SSL certificates created if Traefik is
# enabled, e.g. nasible.<your-domain>, nextcloud.<your-domain>
nasible_domain: example.com

# Your email and domain, used for Let's Encrypt SSL certs
nasible_email: admin@example.com

# Sets the hostname of your NASible installation
nasible_hostname: nasible

# Update all apt packages when playbook is run
keep_packages_updated: false

# Extra packages to install
nasible_extra_packages:
  - smartmontools
  - htop
  - zfsutils-linux
  - bonnie++
  - unzip
  - lm-sensors
  - ctop

# Sets the timezone for NASible
# You can find a list here
# https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
nasible_timezone: Etc/UTC

# Tells ansible to use python 3
ansible_python_interpreter: /usr/bin/python3

#############################################################################
### Docker Settings #########################################################
#############################################################################

# Where you want Docker to store its container data.
docker_home: /mnt/Volume2/docker-containers

# Where you want Docker to store images
docker_image_directory: "{{ docker_home }}/image-data"

# Docker storage driver, see docker documentation for more details
# You might want to change this, depending on your underlying filesystem.
docker_storage_driver: overlay2


#############################################################################
### NFS Settings ############################################################
#############################################################################

# Data you want published over NFS. More info on the NFS config format can
# be found at https://help.ubuntu.com/community/SettingUpNFSHowTo#Shares
# WARNING: Weird things might happen if you share the same data
# over Samba and NFS and allow writes on both!

nfs_shares_root: /mnt/nfs

nfs_exports:
  - "{{ nfs_shares_root }}/public *(rw,sync,no_root_squash)"


#############################################################################
### Samba Settings ##########################################################
#############################################################################

# The location where all shares will be created by default.
# Can be overridden on a per-share basis.
# This path will be mounted to backup containers like Duplicati
samba_shares_root: /mnt/shares

# Basic Share Directories
# If you want to add your own shares add a new "*_root" variable
# and a new share under the samba_shares: list
downloads_root: "{{ samba_shares_root }}/downloads"
movies_root: "{{ samba_shares_root }}/movies"
tv_root: "{{ samba_shares_root }}/tv"
torrents_root: "{{ samba_shares_root }}/torrents"
music_root: "{{ samba_shares_root }}/music"
podcasts_root: "{{ samba_shares_root }}/podcasts"
books_root: "{{ samba_shares_root }}/books"
audiobooks_root: "{{ samba_shares_root }}/audiobooks"
comics_root: "{{ samba_shares_root }}/comics"
photos_root: "{{ samba_shares_root }}/photos"
logs_root: "{{ samba_shares_root }}/logs"
playlists_root: "{{ samba_shares_root }}/playlists"

# Seems to break browsing of the \\server-name shares root when enabled
samba_mitigate_cve_2017_7494: false

# Enable apple exentensions for compatibility with apple clients
samba_apple_extensions: yes

# The account used when Samba shares are accessed. Shouldn't need to change
# this unless you want to mess with Samba user permissions.
samba_guest_account: nasible

# How Samba behaves when an unknown user connects, see Samba docs for more
samba_map_to_guest: Bad Password

# The NetBIOS hostname used by Samba on your network
samba_netbios_name: "{{ nasible_hostname }}"

# The description that'll appear next to your NASible box
samba_server_string: "NASible Shares"

# Shares you want published over Samba.
samba_shares:
  - name: downloads
    comment: 'Stuff downloaded'
    guest_ok: yes
    public: yes
    writable: yes
    browseable: yes
    path: "{{ downloads_root }}"

  - name: movies
    comment: 'Movies'
    guest_ok: yes
    public: yes
    writable: yes
    browseable: yes
    path: "{{ movies_root }}"

  - name: tv
    comment: 'TV Episodes'
    guest_ok: yes
    public: yes
    writable: yes
    browseable: yes
    path: "{{ tv_root }}"

  - name: music
    comment: 'Music'
    guest_ok: yes
    public: yes
    writable: yes
    browseable: yes
    path: "{{ music_root }}"

  - name: podcasts
    comment: 'Podcasts'
    guest_ok: yes
    public: yes
    writable: yes
    browseable: yes
    path: "{{ podcasts_root }}"

  - name: dump
    comment: 'File dump'
    guest_ok: yes
    public: yes
    writable: yes
    browseable: yes
    path: "{{ samba_shares_root }}/dump"

  - name: games
    comment: 'Games'
    guest_ok: yes
    public: yes
    writable: yes
    browseable: yes
    path: "{{ samba_shares_root }}/games"

  - name: photos
    comment: 'Pictures'
    guest_ok: yes
    public: yes
    writable: yes
    browseable: yes
    path: "{{ photos_root }}"

  - name: books
    comment: 'Books'
    guest_ok: yes
    public: yes
    writable: yes
    browseable: yes
    path: "{{ books_root }}"

  - name: audiobooks
    comment: 'Audiobooks'
    guest_ok: yes
    public: yes
    writable: yes
    browsable: yes
    path: "{{ audiobooks_root }}"

  - name: comics
    comment: 'Comics'
    guest_ok: yes
    public: yes
    writable: yes
    browseable: yes
    path: "{{ comics_root }}"

  - name: logs
    comment: 'Logs'
    guest_ok: yes
    public: yes
    writable: yes
    browseable: yes
    path: "{{ logs_root }}"

  - name: playlists
    comment: 'Playlists'
    guest_ok: yes
    public: yes
    writable: yes
    browseable: yes
    path: "{{ playlists_root }}"


#############################################################################
### NASible Applications ####################################################
#############################################################################


#############################################################################
### Airsonic ################################################################
#############################################################################

airsonic_enabled: false
airsonic_available_externally: "false"

airsonic_user_id: "0"
airsonic_group_id: "0"

# directories
airsonic_data_directory: "{{ docker_home }}/airsonic"
airsonic_music_directory: "{{ music_root }}"
airsonic_podcasts_directory: "{{ podcasts_root }}"
airsonic_logs_directory: "{{ logs_root }}/airsonic/airsonic.log"
# network
airsonic_port: "4040"
airsonic_hostname: "airsonic"

airsonic_memory: 1g

#############################################################################
### Bazarr ##################################################################
#############################################################################

bazarr_enabled: false
bazarr_available_externally: "false"

# directories
bazarr_data_directory: "{{ docker_home }}/bazarr/config"
bazarr_tv_directory: "{{ tv_root }}"
bazarr_movies_directory: "{{ movies_root }}"

# uid/gid
bazarr_user_id: "0"
bazarr_group_id: "0"

# network
bazarr_port: "6767"
bazarr_hostname: "bazarr"

#############################################################################
### Bitwarden ###############################################################
#############################################################################

bitwarden_enabled: false
bitwarden_available_externally: "false"
bitwarden_data_directory: "{{ docker_home }}/bitwarden"
bitwarden_port_a: "19080"
bitwarden_port_b: "3012"

# Keep this token secret, this is password to access admin areas!
# This token can be anything, but it's recommended to use a long
# and randomly generated string of characters, ex: openssl rand -base64 48
bitwarden_admin_token: qwertyuiop1234567890poiuytrewq0987654321

# To create a user set this to "true", and reprovision the container by
# re-running the nasible playbook. Once you have created your user, set
# to "false" and run one more time. Target just Bitwarden by running:
# ansible-playbook -i inventory nas.yml -b -K -t bitwarden
bitwarden_allow_signups: false

bitwarden_memory: 2g

#############################################################################
### Calibre-Web #############################################################
#############################################################################

# enable or disable the application
calibre_web_enabled: false
calibre_web_available_externally: "false"

# directories
calibre_web_data_directory: "{{ docker_home }}/calibre_web"
calibre_web_logs: "{{ docker_home }}/calibre_web/logs"
calibre_web_books_directory: "{{ books_root }}"


# uid / gid
calibre_web_user_id: "0"
calibre_web_group_id: "0"

# network
calibre_web_hostname: "calibre_web"
calibre_web_port: "8084"

# specs
# To disable ebook conversion set calibre_ebook_conversion to "".
# To enable it set it to "linuxserver/calibre-web:calibre"
calibre_web_memory: "1g"
calibre_web_ebook_conversion: "linuxserver/calibre-web:calibre"

#############################################################################
### CloudCMD ################################################################
#############################################################################

# enable or disable the application
cloudcmd_enabled: false
cloudcmd_available_externally: "false"

# directories
cloudcmd_data_directory: "{{ docker_home }}/cloudcmd/config"
cloudcmd_browse_directory: "/"

# uid / gid
cloudcmd_user_id: "0"
cloudcmd_group_id: "0"

# network
cloudcmd_hostname: "cloudcmd"
cloudcmd_port: "7373"

# specs
cloudcmd_memory: "1g"

#############################################################################
### Cloudflare DDNS #########################################################
#############################################################################

cloudflare_ddns_enabled: false

# Data directory for config file
cloudflare_data_directory: "{{ docker_home }}/cloudflare_ddns"

# Your domain name
cloudflare_zone: "{{ nasible_domain }}"

# The hostname you want the container to update.
# You shouldn't need to change this.
cloudflare_host: "*.{{ cloudflare_zone }}"

# Cloudflare scoped token
# (https://github.com/joshuaavalon/docker-cloudflare#api-token)
# Make sure token permissions include #DNS:Edit and #Zone:Read
cloudflare_token: "abcdabcdabcd123412341234"

# Set to true to make traffic go through the CloudFlare CDN.
# Note that if the cloudflare host is a wildcard (the default)
# leave false, as cloudflare does not support http proxy of wildcard CNAMEs.
cloudflare_proxy: false

# Set to AAAA to use set IPv6 records instead of IPv4 records.
cloudflare_type: "A"

#############################################################################
### Couchpotato #############################################################
#############################################################################

couchpotato_enabled: false
couchpotato_available_externally: "false"

# directories
couchpotato_config_directory: "{{ docker_home }}/couchpotato/config"
couchpotato_movies_directory: "{{ movies_root }}"
couchpotato_downloads_directory: "{{ downloads_root }}"
couchpotato_torrents_directory: "{{ torrents_root }}"

# uid / gid
couchpotato_user_id: "0"
couchpotato_group_id: "0"

# network
couchpotato_port: "5050"

#############################################################################
### Deluge ##################################################################
#############################################################################

deluge_enabled: false
deluge_available_externally: "false"

# directories
deluge_config_directory: "{{ docker_home }}/deluge/config"
deluge_download_directory: "{{ downloads_root }}"
deluge_watch_directory: "{{ torrents_root }}"

# uid / gid
deluge_user_id: "0"
deluge_group_id: "0"

# error logging
deluge_log_level: "error"

# network
deluge_port: "8112"
deluge_hostname: "deluge"

deluge_timezone: "{{ nasible_timezone }}"

#############################################################################
### Duplicati ###############################################################
#############################################################################

duplicati_enabled: false
duplicati_available_externally: "false"

# directories
duplicati_data_directory: "{{ docker_home }}/duplicati/config"

# network
duplicati_port: "8200"
duplicati_hostname: "duplicati"

#############################################################################
### Emby ####################################################################
#############################################################################

emby_enabled: false
emby_available_externally: "false"

# directories
emby_config_directory: "{{ docker_home }}/emby/config"
emby_movies_directory: "{{ movies_root }}"
emby_tv_directory: "{{ tv_root }}"


# If you're paranoid, set permissions to "ro" so Emby won't
# be able to delete your files
emby_movies_permissions: "rw"
emby_tv_permissions: "rw"

# uid / gid
emby_user_id: "0"
emby_group_id: "0"

# network
emby_port_http: "8096"
emby_port_https: "8920"
emby_hostname: "emby"

#############################################################################
### Firefly III #############################################################
#############################################################################

# enable or disable the application
firefly_enabled: false
firefly_available_externally: "false"

# directories
firefly_data_directory: "{{ docker_home }}/firefly"

# network
firefly_hostname: "firefly"
firefly_port: "8066"

# specs
firefly_memory: "1g"

#############################################################################
### Get iPlayer #############################################################
#############################################################################

get_iplayer_enabled: false

# directories
get_iplayer_config_directory: "{{ docker_home }}/get_iplayer"
get_iplayer_download_directory: "{{ tv_root }}/iplayer_downloads"

# network
get_iplayer_port: "8182"

# specs
get_iplayer_memory: "1g"

#############################################################################
### Gitea ###################################################################
#############################################################################

gitea_enabled: false
gitea_available_externally: "false"

# directories
gitea_data_directory: "{{ docker_home }}/gitea"

# network
gitea_hostname: "gitea"
gitea_port_http: "3001"
gitea_port_ssh: "222"

#############################################################################
### Gitlab ##################################################################
#############################################################################

# enable or disable the application
gitlab_enabled: false
gitlab_available_externally: "false"

# directories
gitlab_config_directory: "{{ docker_home }}/gitlab/config"
gitlab_data_directory: "{{ docker_home }}/gitlab"

# network
gitlab_hostname: "gitlab"
gitlab_port_http: "80"
gitlab_port_https: "443"
gitlab_port_ssh: "22"

# specs
gitlab_memory: "4g"

#############################################################################
### Glances #################################################################
#############################################################################

# enable or disable the application
glances_enabled: false
glances_available_externally: "false"

# directories
glances_config_directory: "{{ docker_home }}/glances/config"
glances_logs: "{{ docker_home }}/glances/logs"
glances_share_directory: "{{ example_share_root }}"


# uid / gid
glances_user_id: "0"
glances_group_id: "0"

# network
glances_hostname: "glances"
glances_port_one: "61208"
glances_port_two: "61209"

# specs
glances_memory: "1g"

#############################################################################
### Grafana Stats ###########################################################
#############################################################################

# enable or disable the application
grafana_stats_enabled: false
grafana_stats_available_externally: "false"

# directories
telegraf_data_directory: "{{ docker_home }}/telegraf"
influxdb_data_directory: "{{ docker_home }}/influxdb"
grafana_data_directory: "{{ docker_home }}/grafana"


# uid / gid
grafana_stats_user_id: "0"
grafana_stats_group_id: "0"

# network
grafana_stats_hostname: "grafana_stats"
grafana_port: "3000"
grafana_influxdb_port: "8086"

# specs
grafana_stats_memory: "1g"
stat_collection_interval: 15s

#############################################################################
### Guacamole ###############################################################
#############################################################################

# enable or disable the application
guacamole_enabled: false
guacamole_available_externally: "false"

# directories
guacamole_data_directory: "{{ docker_home }}/guacamole"

# uid / gid
guacamole_user_id: "0"
guacamole_group_id: "0"

# network
guacamole_hostname: "guacamole"
guacamole_port: "8090"

# specs
guacamole_memory: "1g"

#############################################################################
### Heimdall ################################################################
#############################################################################

heimdall_enabled: true
heimdall_available_externally: "false"

# directories
heimdall_docker_image: linuxserver/heimdall:latest
heimdall_data_directory: "{{ docker_home }}/heimdall"

# network
heimdall_port_http: "10080"
heimdall_port_https: "10443"
heimdall_hostname: heimdall

# uid / gid
heimdall_user_id: "1310"
heimdall_group_id: "1310"

#############################################################################
### Homeassistant ###########################################################
#############################################################################

homeassistant_enabled: false
homeassistant_available_externally: "false"

# directories
homeassistant_data_directory: "{{ docker_home }}/homeassistant"

# network
homeassistant_port: "8123"
homeassistant_hostname: "homeassistant"

#############################################################################
### Homebridge ##############################################################
#############################################################################

# enable or disable the application
homebridge_enabled: false
homebridge_available_externally: "false"

# directories
homebridge_config_directory: "{{ docker_home }}/homebridge/config"

# uid / gid
homebridge_user_id: "0"
homebridge_group_id: "0"

# network
homebridge_hostname: "homebridge"
homebridge_port: "8087"

# specs
homebridge_memory: "1g"

#############################################################################
### Jackett #################################################################
#############################################################################

# enable or disable the application
jackett_enabled: false
jackett_available_externally: "false"

# directories
jackett_data_directory: "{{ docker_home }}/jackett"
jackett_torrents_root: "{{ torrents_root }}"

# network
jackett_hostname: "jackett"
jackett_port: "9117"

# specs
jackett_memory: "1g"

#############################################################################
### Jellyfin ################################################################
#############################################################################

# enable or disable the application
jellyfin_enabled: false
jellyfin_available_externally: "false"

# directories
jellyfin_config_directory: "{{ docker_home }}/jellyfin/config"
jellyfin_movies_directory: "{{ movies_root }}"
jellyfin_movies_permissions: "rw"
jellyfin_music_directory: "{{ music_root }}"
jellyfin_music_permissions: "rw"
jellyfin_photos_directory: "{{ photos_root }}"
jellyfin_photos_permissions: "rw"
jellyfin_tv_directory: "{{ tv_root }}"
jellyfin_tv_permissions: "rw"
jellyfin_books_directory: "{{ books_root }}"
jellyfin_books_permissions: "rw"
jellyfin_audiobooks_directory: "{{ audiobooks_root }}"
jellyfin_audiobooks_permissions: "rw"


# uid / gid
jellyfin_user_id: "0"
jellyfin_group_id: "0"

# network
jellyfin_hostname: "jellyfin"
jellyfin_port_http: "8896"
jellyfin_port_https: "8928"

# specs
jellyfin_memory: "1g"

#############################################################################
### Joomla ##################################################################
#############################################################################

# enable or disable the application
joomla_enabled: false
joomla_available_externally: "false"

# directories
joomla_data_directory: "{{ docker_home }}/joomla"
joomla_logs: "{{ docker_home }}/joomla/logs"
joomla_share_directory: "{{ example_share_root }}"

joomla_database_password: "{{ nasible_default_password }}"

# uid / gid
joomla_user_id: "0"
joomla_group_id: "0"

# network
joomla_hostname: "joomla"
joomla_port: "8181"

# specs
joomla_memory: "1g"

#############################################################################
### Krusader ################################################################
#############################################################################

# enable or disable the application
krusader_enabled: false
krusader_available_externally: "false"

# directories
krusader_config_directory: "{{ docker_home }}/krusader/config"
krusader_logs: "{{ docker_home }}/krusader/logs"
krusader_share_directory: "{{ example_share_root }}"


# uid / gid
krusader_user_id: "0"
krusader_group_id: "0"

# network
krusader_hostname: "krusader"
krusader_port: "12345"

# specs
krusader_memory: "1g"

#############################################################################
### Lidarr ##################################################################
#############################################################################

lidarr_enabled: false
lidarr_available_externally: "false"

# directories
lidarr_data_directory: "{{ docker_home }}/lidarr/config"
lidarr_music_directory: "{{ music_root }}"
lidarr_downloads_directory: "{{ downloads_root }}"

# uid/gid
lidarr_user_id: "0"
lidarr_group_id: "0"

# network
lidarr_port: "8686"
lidarr_hostname: "lidarr"

#############################################################################
### MiniDLNA ################################################################
#############################################################################

# enable or disable the application
minidlna_enabled: false
minidlna_available_externally: "false"

# directories
minidlna_media_directory1: "{{ movies_root }}"
minidlna_media_directory2: "{{ tv_root }}"

# network
minidlna_friendly_name: "{{ nasible_hostname }}"
minidlna_port: "8201"

# specs
minidlna_memory: "1g"

#############################################################################
### Miniflux ################################################################
#############################################################################

# enable or disable the application
miniflux_enabled: false
miniflux_available_externally: "false"

# directories
miniflux_data_directory: "{{ docker_home }}/miniflux"


# uid / gid
miniflux_user_id: "0"
miniflux_group_id: "0"

# network
miniflux_hostname: "miniflux"
miniflux_port: "8070"

# specs
miniflux_memory: "1g"
miniflux_admin_username: "{{ nasible_user }}"
miniflux_admin_password: "{{ nasible_default_password }}"

#############################################################################
### Mosquitto ###############################################################
#############################################################################

# enable or disable the application
mosquitto_enabled: false
mosquitto_available_externally: "false"

# directories
mosquitto_data_directory: "{{ docker_home }}/mosquitto"


# uid / gid
mosquitto_user_id: "0"
mosquitto_group_id: "0"

# network
mosquitto_hostname: "mosquitto"
mosquitto_port_a: "1883"
mosquitto_port_b: "9001"

# specs
mosquitto_memory: "1g"

#############################################################################
### Mylar ###################################################################
#############################################################################

# enable or disable the application
mylar_enabled: false
mylar_available_externally: "false"

# directories
mylar_data_directory: "{{ docker_home }}/mylar"
mylar_comics_directory: "{{ comics_root }}"
mylar_downloads_directory: "{{ downloads_root }}"


# uid / gid
mylar_user_id: "0"
mylar_group_id: "0"

# network
mylar_hostname: "mylar"
mylar_port_http: "8585"

# specs
mylar_memory: "1g"

#############################################################################
### My Media for Alexa ######################################################
#############################################################################

# enable or disable the application
mymediaforalexa_enabled: false

# directories
mymediaforalexa_media_directory: "{{ music_root }}"
mymediaforalexa_data_directory: "{{ docker_home }}/mymediaforalexa"

# specs
mymediaforalexa_memory: "1g"

#############################################################################
### N8N #####################################################################
#############################################################################

n8n_enabled: false

# Networking
n8n_available_externally: "false"
n8n_port: "5678"
n8n_hostname: "n8n"

# Directories
n8n_data_directory: "{{ docker_home }}/n8n"


# Security
n8n_basic_auth_user: "n8n_user"
n8n_basic_auth_password: "{{ nasible_default_password }}"

#############################################################################
### Netdata #################################################################
#############################################################################

netdata_enabled: false
netdata_available_externally: "false"

# network
netdata_hostname: "netdata"
netdata_port: "19999"

#############################################################################
### Nextcloud ###############################################################
#############################################################################

nextcloud_enabled: false
nextcloud_available_externally: "false"

nextcloud_image: "linuxserver/nextcloud:21"

# directories
nextcloud_data_directory: "{{ docker_home }}/nextcloud"

# network
nextcloud_port: "8080"
nextcloud_hostname: "nextcloud"

nextcloud_memory: 4g

# username / passwords
nextcloud_sql_user: "nextcloud-user"
nextcloud_sql_password: "nextcloud-pass"
nextcloud_sql_root_password: "nextcloud-secret"

#############################################################################
### NZBget ##################################################################
#############################################################################

nzbget_enabled: false
nzbget_available_externally: "false"

# directories
nzbget_data_directory: "{{ docker_home }}/nzbget"
nzbget_download_directory: "{{ downloads_root }}"

# uid / gid
nzbget_user_id: "0"
nzbget_group_id: "0"

# network
nzbget_port: "6789"
nzbget_hostname: "nzbget"

# specs
nzbget_app_memory: "1g"

#############################################################################
### Ombi ####################################################################
#############################################################################

ombi_enabled: false
ombi_available_externally: "false"

# directories
ombi_config_directory: "{{ docker_home }}/ombi/config"

# network
ombi_port: "3579"
ombi_hostname: "ombi"

# uid / gid
ombi_user_id: "0"
ombi_group_id: "0"

#############################################################################
### OpenHAB #################################################################
#############################################################################

# enable or disable the application
openhab_enabled: false
openhab_available_externally: "false"

# directories
openhab_data_directory: "{{ docker_home }}/openhab"


# uid / gid
openhab_user_id: "0"
openhab_group_id: "0"

# network
openhab_hostname: "openhab"
openhab_port_http: "7777"
openhab_port_https: "7778"

# specs
openhab_memory: "1g"
openhab_docker_image: openhab/openhab:latest

#############################################################################
### Organizr ################################################################
#############################################################################

organizr_enabled: false
organizr_available_externally: "false"

# directories
organizr_data_directory: "{{ docker_home }}/organizr"

# network
organizr_port_http: "10081"
organizr_port_https: "10444"
organizr_hostname: "organizr"

# uid / gid
organizr_user_id: "1000"
organizr_group_id: "1000"

#############################################################################
### Plex ####################################################################
#############################################################################

plex_enabled: false
plex_available_externally: "false"

# directories
plex_config_directory: "{{ docker_home }}/plex/config"
plex_logs: "{{ docker_home }}/plex/logs"
plex_movies_directory: "{{ movies_root }}"
plex_tv_directory: "{{ tv_root }}"
plex_photos_directory: "{{ photos_root }}"
plex_podcasts_directory: "{{ podcasts_root }}"
plex_music_directory: "{{ music_root }}"

# uid / gid
plex_user_id: "0"
plex_group_id: "0"

# If you're paranoid, set permissions to "ro" so Plex won't ever be able to
# delete your files
plex_movies_permissions: "rw"
plex_tv_permissions: "rw"
plex_photos_permissions: "rw"
plex_podcasts_permissions: "rw"
plex_music_permissions: "rw"

# network
plex_hostname: "plex"

# specs
plex_memory: "2g"

# Device mappings for the docker container. E.g. To enable hardware transcoding:
# plex_devices:
#  - "/dev/dri:/dev/dri"


# see https://hub.docker.com/r/linuxserver/plex for details on this setting
plex_version: "docker"

#############################################################################
### Portainer ###############################################################
#############################################################################

portainer_enabled: true
portainer_available_externally: "false"

# directories
portainer_data_directory: "{{ docker_home }}/portainer/config"

# network
portainer_port: "9000"
portainer_hostname: "portainer"

#############################################################################
### PyLoad ##################################################################
#############################################################################

pyload_enabled: false
pyload_available_externally: "false"

# directories
pyload_config_directory: "{{ docker_home }}/pyload"
pyload_download_directory: "{{ downloads_root }}"


# uid / gid
pyload_user_id: "0"
pyload_group_id: "0"

# network
pyload_hostname: "pyload"
pyload_port: "8000"

# specs
pyload_memory: "1g"

#############################################################################
### PyTiVo ##################################################################
#############################################################################

# enable or disable the application
pytivo_enabled: false
pytivo_available_externally: "false"

# directories
pytivo_config_directory: "{{ docker_home }}/pytivo/config"
pytivo_movies_directory: "{{ movies_root }}"
pytivo_tv_directory: "{{ tv_root }}"
pytivo_photos_directory: "{{ photos_root }}"
pytivo_music_directory: "{{ music_root }}"
pytivo_podcasts_directory: "{{ podcasts_root }}"

# uid / gid
pytivo_user_id: "0"
pytivo_group_id: "0"

# network
pytivo_hostname: "pytivo"

# specs
pytivo_memory: "1g"

#############################################################################
### Radarr ##################################################################
#############################################################################

radarr_enabled: false
radarr_available_externally: "false"

# directories
radarr_movies_directory: "{{ movies_root }}"
radarr_download_directory: "{{ downloads_root }}"
radarr_data_directory: "{{ docker_home }}/radarr"

# uid / gid
radarr_user_id: "0"
radarr_group_id: "0"

# network
radarr_port: "7878"
radarr_hostname: "radarr"

#############################################################################
### SickChill################################################################
#############################################################################

sickchill_enabled: false
sickchill_available_externally: "false"

# directories
sickchill_config_directory: "{{ docker_home }}/sickchill/config"
sickchill_tv_directory: "{{ tv_root }}"
sickchill_downloads_directory: "{{ downloads_root }}/completed"

# uid / gid
sickchill_user_id: "0"
sickchill_group_id: "0"

# network
sickchill_port: "8081"
sickchill_hostname: "sickchill"

#############################################################################
### Sonarr ##################################################################
#############################################################################

sonarr_enabled: false
sonarr_available_externally: "false"

# directories
sonarr_data_directory: "{{ docker_home }}/sonarr/config"
sonarr_tv_directory: "{{ tv_root }}"
sonarr_download_directory: "{{ downloads_root }}"

# uid / gid
sonarr_user_id: "0"
sonarr_group_id: "0"

# network
sonarr_port: "8989"
sonarr_hostname: "sonarr"

#############################################################################
### Syncthing ###############################################################
#############################################################################

syncthing_enabled: false
syncthing_available_externally: "false"

# directories
syncthing_data_directory: "{{ samba_shares_root }}/syncthing"

# these are the directories that you want to mount from the local nasible
# filesystem into the syncthing container.
# format is:
# - "/ansible/nas/filesystem/directory_name:/var/syncthing/directory_name"
syncthing_volumes:
  - "{{ syncthing_data_directory }}:/var/syncthing/"

# network
syncthing_port: "8384"
syncthing_hostname: "syncthing"

#############################################################################
### Tautulli ################################################################
#############################################################################

tautulli_enabled: false
tautulli_available_externally: "false"

# directories
tautulli_config_directory: "{{ docker_home }}/tautulli/config"

# uid / gid
tautulli_user_id: "0"
tautulli_group_id: "0"

# network
tautulli_hostname: "tautulli"
tautulli_port: "8185"

# specs
tautulli_memory: "1g"

#############################################################################
### The Lounge ##############################################################
#############################################################################

# enable or disable the application
thelounge_enabled: false
thelounge_available_externally: "false"

# directories
thelounge_data_directory: "{{ docker_home }}/thelounge"

# uid / gid
thelounge_user_id: "0"
thelounge_group_id: "0"

# network
thelounge_hostname: "thelounge"
thelounge_port_one: "113"
thelounge_port_two: "9002"

# specs
thelounge_memory: "1g"

#############################################################################
### TimeMachine #############################################################
#############################################################################

# enable or disable the application
timemachine_enabled: false
timemachine_available_externally: "false"

# directories
timemachine_data_directory: "{{ docker_home }}/timemachine"

# uid / gid
timemachine_user_id: "0"
timemachine_group_id: "0"

# network
timemachine_hostname: "timemachine"
timemachine_port: "10445"

# specs
timemachine_memory: "1g"
timemachine_volume_size_limit: "0"
timemachine_password: "{{ nasible_default_password }}"
timemachine_share_name: Data
timemachine_log_level: error

#############################################################################
### Traefik #################################################################
#############################################################################

# Traefik will allow access to certain applications externally.
# To enable this you'll either need to have; a domain name that points to
# your home static IP address, the cloudflare with the cloudflare_ddns
# dynamic DNS container enabled, or use a dynamic DNS provider like no-ip.
# You'll also need to map ports 80 and 443 from your router to your
# nasible server, then enable the per-app "available_externally" settings.
traefik_enabled: false

# directories
traefik_data_directory: "{{ docker_home }}/traefik"

# network
traefik_port_http: "80"
traefik_port_https: "443"
traefik_port_ui: "8083"

traefik_docker_image: traefik:v2.4
traefik_log_level: "INFO"

# find the relevant name and environment variables for your DNS provider
# at https://go-acme.github.io/lego/dns/
traefik_dns_provider: cloudflare
traefik_environment_variables:
  CF_DNS_API_TOKEN: "abcdabcd123412341234"

# NASible requests a wildcard certificate for your domain, so there should
# be no reason to have to use the staging letsencrypt server. If you do want
# to flip between staging/production, you might need to stop Traefik and
# clear the "{{ docker_home }}/traefik" after changing this setting.
# traefik_acme_server:
#   - "https://acme-staging-v02.api.letsencrypt.org/directory" # staging
traefik_acme_server: "https://acme-v02.api.letsencrypt.org/directory" # prod

#############################################################################
### Transmission ############################################################
#############################################################################

transmission_enabled: false
transmission_available_externally: "false"

# directories
transmission_config_directory: "{{ docker_home }}/transmission/config"
transmission_download_directory: "{{ downloads_root }}"
transmission_watch_directory: "{{ torrents_root }}"

# uid / gid
transmission_user_id: "0"
transmission_group_id: "0"

# network
transmission_webui_port: "9092"
transmission_external_port: "51414"
transmission_hostname: "transmission"

transmission_timezone: "{{ nasible_timezone }}"

#############################################################################
### Transmission W OpenVPN ##################################################
#############################################################################

# Please see docs about how to set VPN credentials
transmission_with_openvpn_enabled: false
transmission_with_openvpn_available_externally: "false"

# directories
# transmission_config_directory: "{{ docker_home }}/transmission/config"
# transmission_download_directory: "{{ downloads_root }}"
# transmission_watch_directory: "{{ torrents_root }}"

# uid / gid
transmission_openvpn_user_id: "0"
transmission_openvpn_group_id: "0"

# transmission config
transmission_openvpn_ratio_limit_enabled: "true"
transmission_openvpn_ratio_limit: "2"
transmission_openvpn_local_network: "192.168.1.0/24"

# network config
transmission_openvpn_webui_port: "9091"
transmission_openvpn_external_port: "51415"
transmission_openvpn_proxy_port: "3128"
transmission_openvpn_hostname: "transmission_openvpn"

# Transmission VPN Credentials
# If you're using a VPN, you'll need to set these credentials.
# See https://github.com/haugene/docker-transmission-openvpn/ for supported
# VPN providers.
openvpn_username: leisure-suit-larry
openvpn_password: "{{ nasible_default_password }}"
openvpn_provider: AWESOMEVPNPROVIDER
openvpn_config: United-Kingdom
openvpn_config_directory: "{{ docker_home }}/openvpn"

#############################################################################
### Ubooquity ###############################################################
#############################################################################

# enable or disable the application
ubooquity_enabled: false
ubooquity_available_externally: "false"

# directories
ubooquity_data_directory: "{{ docker_home }}/ubooquity"


# uid / gid
ubooquity_user_id: "0"
ubooquity_group_id: "0"

# network
ubooquity_hostname: "ubooquity"
ubooquity_port_webui: "2202"
ubooquity_port_admin: "2203"

# specs
ubooquity_memory: "1g"

#############################################################################
### Utorrent ################################################################
#############################################################################

utorrent_enabled: false
utorrent_available_externally: "false"

# directories
utorrent_config_directory: "{{ docker_home }}/utorrent/config"
utorrent_download_directory: "{{ downloads_root }}"
utorrent_download_directory_active: "{{ downloads_root }}/.incomplete"

# uid / gid
utorrent_user_id: "0"
utorrent_group_id: "0"

# network
utorrent_port_http: "8111"
utorrent_port_bt: "6881"
utorrent_hostname: "utorrent"

#############################################################################
### Virtual Desktop #########################################################
#############################################################################

# enable or disable the application
virtual_desktop_enabled: false
virtual_desktop_available_externally: "false"

# directories
vd_data_directory: "{{ docker_home }}/virtual_desktop"
vd_docker_image: "rattydave/docker-ubuntu-xrdp-mate-custom:20.04-tools"
vd_users:
  - username: "{{ nasible_user }}"
    password: "{{ nasible_default_password }}"
    sudo: "Y"
vd_rdp_port: "3389"

# network
virtual_desktop_hostname: "virtual_desktop"

# specs
virtual_desktop_memory: "2g"


#############################################################################
### Wallabag ################################################################
#############################################################################

# enable or disable the application
wallabag_enabled: false
wallabag_available_externally: "false"

# directories
wallabag_data_directory: "{{ docker_home }}/wallabag"

# uid / gid
wallabag_user_id: "0"
wallabag_group_id: "0"

# network
wallabag_hostname: "wallabag"
wallabag_port: "7780"

# specs
wallabag_memory: "1g"

#############################################################################
### Watchtower ##############################################################
#############################################################################

watchtower_enabled: false

# Sets the 6 field cron schedule to use for checks and updates.
# This will check at 5am daily.
watchtower_cron_schedule: 0 0 5 * * *

# Sets the Watchtower Docker start command. Different options can be supplied
# based on whether you want to receive notifications or not, some examples
# are provided below. See https://containrrr.dev/watchtower/arguments/
# for more options.

# No notifications
watchtower_command: "--schedule '{{ watchtower_cron_schedule }}'"

# Email notifications
# watchtower_command: "--schedule '{{ watchtower_cron_schedule }}' --notifications 'email' --notification-email-from 'ansible@nas.com' --notification-email-to '{{ nasible_email }}' --notification-email-server 'my.email.server.com' --notification-email-server-port '25' --notification-email-server-user 'email_username' --notification-email-server-password 'top-secret'"

# Slack notifications
# watchtower_command: "--schedule '{{ watchtower_cron_schedule }}' --notifications 'slack' --notification-slack-hook-url 'https://hooks.slack.com/services/xxx/yyyyyyyyyyyyyyy' --notification-slack-identifier 'nasible'"

#############################################################################
### Youtubedlmaterial #######################################################
#############################################################################

# enable or disable the application
youtubedlmaterial_enabled: false
youtubedlmaterial_available_externally: "false"

# directories
youtubedlmaterial_data_directory: "{{ docker_home }}/youtubedlmaterial"
youtubedlmaterial_dl_audio_directory: "{{ downloads_root }}/youtube/audio"
youtubedlmaterial_dl_video_directory: "{{ downloads_root }}/youtube/video"
youtubedlmaterial_dl_subscriptions_directory: "{{ downloads_root }}/youtube/subscriptions"


# uid / gid
youtubedlmaterial_user_id: "0"
youtubedlmaterial_group_id: "0"

# network
youtubedlmaterial_hostname: "youtubedlmaterial"
youtubedlmaterial_port_http: "8998"

# specs
youtubedlmaterial_memory: "1g"

#############################################################################
### ZNC #####################################################################
#############################################################################

# enable or disable the application
znc_enabled: false
znc_available_externally: "false"

# directories
znc_data_directory: "{{ docker_home }}/znc"

# uid / gid
znc_user_id: "0"
znc_group_id: "0"

# network
znc_hostname: "znc"
znc_port: "6677"

# specs
znc_memory: "1g"

#############################################################################
#############################################################################
#############################################################################
